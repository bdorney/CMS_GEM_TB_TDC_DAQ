# Define the compiler
CC = g++

# Define root-config 
ROOTCONFIG = $(ROOTSYS)/bin/root-config

# Define any compile-time flags
#CFLAGS = -Dlong32="int" -Dlong64="long long"
#CFLAGS = -g3 -O0 `$(ROOTCONFIG) --cflags --glibs --libs` -std=c++11
CFLAGS = -gdwarf-2 -O0 `$(ROOTCONFIG) --cflags --glibs --libs` -std=c++11
#CFLAGS = -g3 -O0 `$(ROOTCONFIG) --cflags --glibs --libs` -std=c++0x

# Define any directories containing header files other than "/usr/include"
#INC_CAEN = include/CAEN/
#INCLUDES = -I include/ -I$(ROOTSYS)/include/ -I $(INC_CAEN)
INCLUDES = -I include/ -I$(ROOTSYS)/include/

# Define any library paths in addition to "/usr/lib"
LPATHS = -L $(ROOTSYS)/lib/

# Define any libraries to link into executable
#LIBS = -lSpectrum
LIBS = -lCAENVME

# Define source files
SOURCES =   src/QualityControlUtilityFunctions.cpp \
            src/ParameterLoader.cpp \
            src/ParameterLoaderDAQ.cpp \
            src/DataWordV775.cpp \
            src/Reconstructor.cpp \
            src/ReconstructorDigi.cpp \
            src/IDaqVmeInterface.cpp \
            src/IDaqVmeModule.cpp \
            src/IDaqV513.cpp \
            src/IDaqV775.cpp \
            src/HardwareCrateVME.cpp \
            src/ManagerDAQ.cpp \
            src/cosmicStandTDCDAQ.cpp

# Define object files
#	We use Suffix Replacement
#	$(name:string1=string2)
#		for each owrd in 'name' we will replace 'string1' with 'string2'
#	Here we replace all ".cpp" with ".o" when defining the objects
OBJECTS = $(SOURCES:.cpp=.o)

# Define the executable
EXEC = cosmicStandTDCDAQ

# Define default behavior
#default: $(EXEC)

.PHONY: depend clean

all:	$(EXEC)
	@echo	Compiling $(EXEC)
	@echo	ROOTSYS = $(ROOTSYS)

$(EXEC): $(OBJECTS)
	$(CC) $(CFLAGS) $(INCLUDES) -o $(EXEC) $(OBJECTS) $(LPATHS) $(LIBS)

# Here we use Suffix Replacement to building our object files
# we use automatic variables $<: the name of the prerequisite of 
# the rule (*.cpp file) and $@: the name of the target (*.o file)
# (you should review the gnu make manual, sec. on auto. variables)

.cpp.o:
	$(CC) $(CFLAGS) $(INCLUDES) -c $< -o $@  $(LPATHS) $(LIBS)

clean:
	$(RM) src/*.o src/*~ $(EXEC)

depend: $(SOURCES)
	makedepend $(INCLUDES) $^

# DO NOT DELETE THIS LINE -- make depend needs it
